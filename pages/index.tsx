import { useState } from "react";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { CustomMenu } from "../components/menu/Menu";
import { Navbar } from "../components/navbar/Navbar";

// Redux
import { AppState, wrapper } from "../store";
import { useSelector, useDispatch } from "react-redux";
import { toggleMenu } from "../slices/menuSlice";

// Pages
import AboutPage from "./about";
import HomePage from "./home";
import { InferGetStaticPropsType } from "next";
import { stringify } from "querystring";

function renderSwitch(currentPage: string, data: []) {
  switch (currentPage) {
    case "/":
      return <HomePage />;
    case "/about":
      return <AboutPage />;
  }
}

export default function Home({ data }: InferGetStaticPropsType<typeof getStaticProps>) {
  const [showMenu, setShowMenu] = useState<boolean>(false);

  // Redux
  const isOpenMenu = useSelector((state: AppState) => state.menu.isOpenMenu);
  const currentPage = useSelector((state: AppState) => state.page.currentPage);
  const dispatch = useDispatch();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        {/* <meta name="viewport" content="width=device-width, initial-scale=1" /> */}
        <meta
          name="viewport"
          content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"
        />
        <title>หน้าแรก | Thailand COVID-19 Virtualization</title>
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mb-16">
        <div>
          <Navbar />
          {isOpenMenu ? <CustomMenu /> : <div></div>}
        </div>
        <div>{renderSwitch(currentPage, data)}</div>
      </main>
    </>
  );
}

export const getStaticProps = wrapper.getStaticProps(() => async () => {
  const REQUEST_URL = "https://covid19.ddc.moph.go.th/api/Cases/today-cases-all";
  const response = await fetch(REQUEST_URL);
  const data = await response.json();

  return { props: { data } };
});
